/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB           &kp Q           &kp W            &kp E               &kp R             &kp T                                                       &kp Y          &kp U             &kp I        &kp O            &kp P              &kp BACKSPACE
&mt LCTRL ESCAPE  &mt LEFT_GUI A  &mt RIGHT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G                                                       &kp H          &mt LEFT_SHIFT J  &mt LCTRL K  &mt RIGHT_ALT L  &mt LEFT_GUI SEMI  &kp SQT
&kp LSHFT         &kp Z           &kp X            &kp C               &kp V             &kp B                &kp LSHFT  &kp CLCK  &mo 1  &kp LSHFT  &kp N          &kp M             &kp COMMA    &kp DOT          &kp FSLH           &kp RCTRL
                                                   &mo 1               &kp LEFT_GUI      &mt LEFT_ALT RETURN  &kp SPACE  &mo 2     &mo 3  &kp SPACE  &kp RIGHT_ALT  &kp BSPC          &kp RALT
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_2_multimedia {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp C_BRIGHTNESS_INC  &trans      &trans            &trans      &kp C_VOLUME_UP    &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp C_BRIGHTNESS_DEC  &trans      &trans            &trans      &kp C_VOLUME_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &kp K_MUTE         &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans      &trans
            >;
        };

        layer_3_navigation {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans                                  &kp PAGE_UP    &kp HOME        &kp UP_ARROW      &kp END     &kp C_VOLUME_UP    &kp DELETE
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans                                  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT   &kp C_VOLUME_DOWN  &kp INS
&trans  &trans        &trans        &trans     &trans          &trans  &trans  &trans  &trans  &trans  &kp C_PAUSE    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp K_MUTE         &kp PRINTSCREEN
                                    &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans         &trans          &trans
            >;
        };

        layer_4_shift {
            bindings = <
&kp GRAVE  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5                                                             &kp NUMBER_6       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp EQUAL
&kp TILDE  &kp EXCL       &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT                                                              &kp CARET          &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &kp PLUS
&kp PIPE   &kp BACKSLASH  &kp COLON     &kp SEMICOLON  &kp MINUS     &kp LEFT_BRACKET  &kp LEFT_BRACE  &trans  &kp K_COFFEE  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp UNDER     &kp COMMA     &kp DOT       &kp SLASH     &kp QUESTION
                                        &trans         &trans        &trans            &trans          &trans  &trans        &trans           &trans             &trans        &trans
            >;
        };
    };
};
